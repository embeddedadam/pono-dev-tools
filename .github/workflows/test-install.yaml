name: Test Install Script

on: [push, pull_request]

jobs:
  test-install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y zsh git curl

    - name: Install Dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install git curl

    - name: Run Install Script
      run: python install.py

    - name: Check Installation Results
      run: |
        test -d "$HOME/.oh-my-zsh" && echo "oh-my-zsh installed successfully"
        test -d "$HOME/.scm_breeze" && echo "SCM Breeze installed successfully"
        test -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" && echo "zsh-autosuggestions installed successfully"
        test -d "$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" && echo "zsh-syntax-highlighting installed successfully"
        # Add more checks as necessary

    - name: Check Aliases
      run: |
        # Source the .zshrc file
        source $HOME/.zshrc
  
        # Check if .zshrc exists for 'addalias' alias
        if [[ -f "$HOME/.zshrc" ]]; then
          echo ".zshrc file exists - 'addalias' alias check passed"
        else
          echo ".zshrc file does not exist - 'addalias' alias check failed"
          exit 1
        fi
  
        # Test Git aliases (replace with your actual Git aliases)
        git init test_repo
        cd test_repo
        touch test_file
        git add .
        git commit -m "Initial commit" --no-verify
  
        # Test 'git st' alias
        git st || (echo "Alias 'git st' did not work" && false)
  
        # Test 'git co' alias
        git branch new-branch
        git co new-branch || (echo "Alias 'git co' did not work" && false)
  
        cd ..
        rm -rf test_repo
      shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
